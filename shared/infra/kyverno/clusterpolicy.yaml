# kyverno-secrets-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kyverno:secrets-read
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]

---
# Admission controller (validates policies & does dry-run checks)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kyverno:secrets-read-admission
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kyverno:secrets-read
subjects:
  - kind: ServiceAccount
    name: kyverno-admission-controller
    namespace: kyverno

---
# Background controller (reconciliation & synchronize:true)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kyverno:secrets-read-background
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kyverno:secrets-read
subjects:
  - kind: ServiceAccount
    name: kyverno-background-controller
    namespace: kyverno
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: propagate-acr-auth
spec:
  validationFailureAction: Audit   # set to Enforce after you verify
  background: true
  rules:
    - name: clone-acr-auth-into-labeled-namespaces
      match:
        any:
          - resources:
              kinds: ["Namespace"]
              selector:
                matchLabels:
                  secrets.infra/enabled: "true"
      generate:
        apiVersion: v1
        kind: Secret
        name: acr-auth
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        clone:
          namespace: secrets
          name: acr-auth
